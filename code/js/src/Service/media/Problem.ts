/**
 * `Problem` is a type that represents the problem details as defined in RFC 7807.
 *
 * @param {string} type - A URI reference that identifies the problem type.
 * @param {string} title - A short, human-readable summary of the problem type.
 * @param {number} status - The HTTP status code generated by the origin server for this occurrence of the problem.
 * @param {string} [detail] - A human-readable explanation specific to this occurrence of the problem.
 * @param {string} [instance] - A URI reference that identifies the specific occurrence of the problem.
 */
export type Problem = {
  typeUri: string;
  title: string;
  status: number;
  detail?: string;
  instance?: string;
};

/**
 * `problemMediaType` is a constant that represents the media type for problem details as defined in RFC 7807.
 */
export const problemMediaType = 'application/problem+json';

/**
 * `isProblem` is a type guard that checks if an object is a `Problem`.
 */
export function isProblem(object: object): object is Problem {
  return (
    typeof object === 'object' &&
    object !== null &&
    'typeUri' in object &&
    'title' in object &&
    'status' in object &&
    typeof object.status === 'number'
  );
}
